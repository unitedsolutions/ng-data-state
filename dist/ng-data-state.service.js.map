{"version":3,"sources":["../src/ng-data-state.service.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAA,MAAiB,QAAA,CAAS;AACtC,OAAO,EAAA,UAAE,EAAU,MAAU,eAAA,CAAgB;AAC7C,OAAO,EAAA,cAAE,EAAc,MAAM,qBAAA,CAAsB;AACnD,OAAO,EAAA,YAAE,EAAY,MAAQ,+BAAA,CAAgC;AAG7D;IAGE,mBAAoB,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QAFxC,kBAAa,GAAG,EAAE,CAAC;IAEwB,CAAC;IAE5C,kCAAc,GAAd,UAAe,OAAO;QACf,IAAA,mBAAI,CAAY;QAChB,IAAA,kCAAa,CAAS;QAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEtC,EAAE,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAED,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;QACrC,QAAQ,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;QACrC,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QAC/B,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,+BAAW,GAAX,UAAY,IAAI;QACd,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACI,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;KACvB,EAF6F,CAE7F,CAAC;IACF,gBAAC;CA9BD,AA8BC,IAAA;SA9BY,SAAS","file":"ng-data-state.service.js","sourceRoot":"","sourcesContent":["import * as _           from 'lodash';\nimport {Injectable}     from '@angular/core';\nimport {HttpClientPlus} from 'ng-http-client-plus';\nimport {DataResource}   from './data-resource/data-resource';\n\n\nexport class DataState {\n  dataResources = {};\n  \n  constructor(private http: HttpClientPlus) {}\n  \n  createResource(configs) {\n    let {name} = configs;\n    let {dataResources} = this;\n    let resource = this.getResource(name);\n    \n    if(resource) {\n      return resource;\n    }\n\n    _.extend(configs, {http: this.http});\n    resource = new DataResource(configs);\n    dataResources[name] = resource;\n    return resource.fetch();\n  }\n  \n  getResource(name) {\n    return this.dataResources[name];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClientPlus, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}